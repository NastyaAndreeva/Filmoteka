{"mappings":"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","sources":["src/templates/list-of-card-library.hbs","src/js/library-draw.js"],"sourcesContent":["{{#each this}}\n  <div class='movie-card'>\n    <img\n      src='https://image.tmdb.org/t/p/w500{{poster_path}}'\n      alt={{name}}\n      \n      data-id='{{id}}'\n    />\n    <div class='movie-data'>\n      <h5 class='movie-name'>{{name}}</h5>\n      <p class='movie-info'>{{genres}} | {{release}} <span class='movie-vote'>{{vote_average}}</span></p>\n    </div>\n  </div>\n{{/each}}","import itemsTemplate from '../templates/list-of-card-library.hbs';\nimport getUsersMovieList from '../js/api/firebase/firebase_read_db';\nimport auth from './api/firebase/auth_firebase';\n\nconst axios = require('axios').default;\nconst API_KEY = '842344de8347536aefc6f17e8e76d4bd';\nconst MOVIE_URL = `https://api.themoviedb.org/3/movie/`;\nconst galleryLibrary = document.querySelector('#library-gallery');\nconst btnSignOut = document.querySelector('#signout-library');\nconst btnWatched = document.querySelector('#btn-watched');  // Select Watched button\nconst btnQueue = document.querySelector('#btn-queue');      // Select Queue button\nconst upBtn = document.querySelector('.go-up');             // button up to top page\nbtnWatched.addEventListener('click', onLibraryBtnClick);    // Set the listener on Watch button\nbtnQueue.addEventListener('click', onLibraryBtnClick);      // Set the listener on Queque button\nupBtn.addEventListener('click', onUpClick);                 // Set the listener on Button Up\nbtnSignOut.addEventListener('click', auth.logOut);\nconst googleUserLibrary = document.querySelector('#googleUserLibrary');\ngoogleUserLibrary.textContent = localStorage.getItem('user-name');\n\nlet pageOfList = 1;             // package number\nlet marker = false;             // a marker of whether the received packet is drawn\nlet typeOfList = 'btn-queue';   // initial value of page type (Queue)\nlet listofMovie;                // global var for scrolling\n\n// -------------------------- drawing initial page\ngetUsersMovieList(typeOfList).then(generateLibraryMarkup); \n\n// -------------------------- handle button click\nasync function onLibraryBtnClick(event) {\n    typeOfList = event.target.id;   // pull target info about type of list\n    readyToNew(typeOfList);         // clear old data\n    await getUsersMovieList(typeOfList, event).then(generateLibraryMarkup); // drawing initial selected page\n};\n\n// -------------------------- preparation before drawing\nfunction readyToNew(typeOfList) {\n    btnChangeColor(typeOfList);         // clear field\n    galleryLibrary.innerHTML = \"\";      // clear content \n    pageOfList = 1;                     // return to the initial value of the packet (=1)\n}\n\n// -------------------------- generate the markup\nasync function generateLibraryMarkup(usersList) {\n    const moviesPerPage = 12;                                                                   // cards per fetch\n    listofMovie = usersList;                                                                    // set global value for scrolling                                                                     // current page for markup\n    let startItemPosition = (pageOfList - 1) * moviesPerPage;                                   // first item in list for murkup\n    let onePageList = usersList.slice(startItemPosition, startItemPosition + moviesPerPage);    // get list of movie's id for current fetch\n    onePageList = await makeArreyOfDataMovies(onePageList);                                     // making array of the movie objects = movies id list \n    galleryLibrary.insertAdjacentHTML('beforeend', itemsTemplate(onePageList));                 // drawinf gallery\n    document.body.style.cursor = 'default';                                                     // \n    marker = true;                                                                              // set markup (ready)\n}\n\n// -------------------------- making movies data object array\nasync function makeArreyOfDataMovies(array) {\n    document.body.style.cursor = 'wait';\n    const arr = await Promise.all(array.map(async (el) => {\n        el = await axios.get(`${MOVIE_URL}${el}`, { params: { api_key: API_KEY, language: 'ru-RU' } }); // fetch data by movie id\n        el = el.data;                                                                                   \n        el.name = el.title.toUpperCase();                                                               // ajust data for the template\n        el.release = el.release_date?.slice(0, 4) || 2022;\n        el.genres = el.genres.map(item => item = item.name);                                            // convert genres data object to genres array\n        return el;\n    }\n    ))\n    return Promise.resolve(arr);\n}\n\n// --------------------------- btn Change Color\nfunction btnChangeColor(ev) {\n    if (ev === 'btn-watched' && !btnWatched.classList.contains('active-btn')) {\n        btnWatched.classList.toggle(\"active-btn\");\n        btnQueue.classList.toggle(\"active-btn\");\n        return\n    }\n\n    if (ev === 'btn-queue' && !btnQueue.classList.contains('active-btn')) {\n        btnQueue.classList.toggle(\"active-btn\");\n        btnWatched.classList.toggle(\"active-btn\");\n        return\n    }\n}\n\n// scroll handle to add an endless gallery\nwindow.addEventListener(\"scroll\", () => {\n    const docRect = document.documentElement.getBoundingClientRect();   // gain access to the screen area\n    if (docRect.bottom < document.documentElement.clientHeight + 150 && marker && (listofMovie.length / 12) >= pageOfList) {   // if the scroll reached 150 from below and the token allows (to avoid duplication of requests), then we process the request\n        marker = false;\n        pageOfList++;                                   // increase the packet number by 1\n        generateLibraryMarkup(listofMovie);\n    }\n\n    if (window.pageYOffset > 70) {                      // on / off button up\n        upBtn.classList.add(\"on-screen\")}\n        else {upBtn.classList.remove(\"on-screen\")}\n});\n\n// handle a click on the button Up\nfunction onUpClick() {\n    document.documentElement.scrollTop = 0;\n}\n\n"],"names":["$487ee680fc9ac066$export$2e2bcd8739ae039","$parcel$interopDefault","parcelRequire","template","container","depth0","helpers","partials","data","helper","alias1","nullContext","alias2","hooks","helperMissing","alias3","alias4","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","name","hash","loc","start","line","column","end","compiler","main","stack1","fn","program","inverse","noop","useData","default","$0b8454ed30081084$var$galleryLibrary","document","querySelector","$0b8454ed30081084$var$btnSignOut","$0b8454ed30081084$var$btnWatched","$0b8454ed30081084$var$btnQueue","$0b8454ed30081084$var$upBtn","addEventListener","$0b8454ed30081084$var$onLibraryBtnClick","documentElement","scrollTop","$ew5fA","logOut","textContent","localStorage","getItem","$0b8454ed30081084$var$listofMovie","$0b8454ed30081084$var$pageOfList","$0b8454ed30081084$var$marker","$0b8454ed30081084$var$typeOfList","async","event","target","id","ev","classList","contains","toggle","$0b8454ed30081084$var$btnChangeColor","innerHTML","$7PKrS","then","$0b8454ed30081084$var$generateLibraryMarkup","usersList","startItemPosition","onePageList","slice","array","body","style","cursor","arr","Promise","all","map","el","ref","$0b8454ed30081084$require$axios","get","params","api_key","language","title","toUpperCase","release","release_date","genres","item","resolve","$0b8454ed30081084$var$makeArreyOfDataMovies","insertAdjacentHTML","window","getBoundingClientRect","bottom","clientHeight","length","pageYOffset","add","remove"],"version":3,"file":"library.26046892.js.map"}