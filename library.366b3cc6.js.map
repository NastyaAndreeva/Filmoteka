{"mappings":"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","sources":["src/js/library-draw.js","src/templates/list-of-card-library.hbs"],"sourcesContent":["import constants from '../constants/constants';\nimport itemsTemplate from '../templates/list-of-card-library.hbs';\nimport getUsersMovieList from '../js/api/firebase/firebase_read_db';\nimport auth from './api/firebase/auth_firebase';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport currentUser from './storage/currentUser';\nimport refs from '../constants/refs';\n\nconst axios = require('axios').default;\nconst authent = getAuth();\nlet pageOfList = 1;             // package number\nlet marker = false;             // a marker of whether the received packet is drawn\nlet typeOfList = 'btn-queue';   // initial value of page type (Queue)\nlet listOfMovie;                // global var for scrolling\n\nrefs.btnWatched.addEventListener('click', onLibraryBtnClick);    // Set the listener on Watch button\nrefs.btnQueue.addEventListener('click', onLibraryBtnClick);      // Set the listener on Queque button\nrefs.upBtn.addEventListener('click', onUpClick);                 // Set the listener on Button Up\nrefs.btnSignOut.addEventListener('click', auth.logOut);\n\nonAuthStateChanged(authent, (user) => {\n  if (user) {\n      getUsersMovieList(typeOfList).then(generateLibraryMarkup); \n      refs.googleUserLibrary.textContent = currentUser.userEmail;\n  } else {}\n});\n\n// -------------------------- handle button click\nasync function onLibraryBtnClick(event) {\n    typeOfList = event.target.id;           // pull target info about type of list\n    readyToNew(typeOfList);                 // clear old data\n    await getUsersMovieList(typeOfList, event).then(generateLibraryMarkup); // drawing initial selected page\n};\n\nasync function onAddRemoveBntClick() {\n    refs.galleryLibrary.innerHTML = \"\";      // clear content \n    await getUsersMovieList(typeOfList).then(generateLibraryMarkup); // drawing initial selected page\n}\n\n// -------------------------- preparation before drawing\nfunction readyToNew(typeOfList) {\n    btnChangeColor(typeOfList);                 // clear field\n    refs.galleryLibrary.innerHTML = \"\";         // clear content \n    pageOfList = 1;                             // return to the initial value of the packet (=1)\n}\n\n// -------------------------- generate the markup\nasync function generateLibraryMarkup(usersList) {\n    const moviesPerPage = 12;                                                                   // cards per fetch\n    listOfMovie = usersList;                                                                    // set global value for scrolling                                                                     // current page for markup\n    let startItemPosition = (pageOfList - 1) * moviesPerPage;                                   // first item in list for murkup\n    let onePageList = usersList.slice(startItemPosition, startItemPosition + moviesPerPage);    // get list of movie's id for current fetch\n    onePageList = await makeArreyOfDataMovies(onePageList);                                     // making array of the movie objects = movies id list \n    refs.galleryLibrary.insertAdjacentHTML('beforeend', itemsTemplate(onePageList));            // drawinf gallery\n    document.body.style.cursor = 'default';                                                     // \n    marker = true;\n    if (onePageList.length > 0) { refs.footer.style.position = \"static\" };\n}\n\n// -------------------------- making movies data object array\nasync function makeArreyOfDataMovies(array) {\n    document.body.style.cursor = 'wait';\n    const arr = await Promise.all(array.map(async (el) => {\n        el = await axios.get(`${constants.GET_ONE_MOVIE_URL}/${el}`, { params: { api_key: constants.API_KEY, language: 'ru-RU' } });   // fetch data by movie id\n        el = el.data;                                                                                   \n        el.name = el.title.toUpperCase();                                                                           // ajust data for the template\n        el.release = el.release_date?.slice(0, 4) || 2022;\n        el.genres = el.genres.map(item => item = item.name);                                                        // convert genres data object to genres array\n        return el;\n    }\n    ))\n    return Promise.resolve(arr);\n}\n\n// --------------------------- btn Change Color\nfunction btnChangeColor(event) {\n    if (event === 'btn-watched' && !refs.btnWatched.classList.contains('active-btn')) {\n        refs.btnWatched.classList.toggle(\"active-btn\");\n        refs.btnQueue.classList.toggle(\"active-btn\");\n        return\n    }\n\n    if (event === 'btn-queue' && !refs.btnQueue.classList.contains('active-btn')) {\n        refs.btnQueue.classList.toggle(\"active-btn\");\n        refs.btnWatched.classList.toggle(\"active-btn\");\n        return\n    }\n}\n\n// scroll handle to add an endless gallery\nwindow.addEventListener(\"scroll\", () => {\n    const docRect = document.documentElement.getBoundingClientRect();   // gain access to the screen area\n    if (docRect.bottom < document.documentElement.clientHeight + 150 && marker && (listOfMovie.length / 12) >= pageOfList) {   // if the scroll reached 150 from below and the token allows (to avoid duplication of requests), then we process the request\n        marker = false;\n        pageOfList++;                                   // increase the packet number by 1\n        generateLibraryMarkup(listOfMovie);\n    }\n\n    if (window.pageYOffset > 70) {                      // on / off button up\n        refs.upBtn.classList.add(\"on-screen\")}\n        else {refs.upBtn.classList.remove(\"on-screen\")}\n});\n\n// handle a click on the button Up\nfunction onUpClick() {\n    document.documentElement.scrollTop = 0;\n}\n\nexport default onAddRemoveBntClick;","{{#each this}}\n  <div class='movie-card'>\n    {{#if poster_path}}\n      <img\n        src='https://image.tmdb.org/t/p/w500{{poster_path}}'\n        alt={{name}}\n        data-id='{{id}}'\n      />\n    {{else}}\n      <img\n        src='https://i.ibb.co/dJhXHZt/filmoteka.png'\n        alt={{name}}\n        data-id='{{id}}'\n      />\n    {{/if}}\n\n    <div class='movie-data'>\n      <h5 class='movie-name'>{{name}}</h5>\n      <p class='movie-info'>{{genres}}\n        |\n        {{release}}\n        <span class='movie-vote'>{{vote_average}}</span></p>\n    </div>\n  </div>\n{{/each}}"],"names":["$d1WZ0","parcelRequire","$487ee680fc9ac066$export$2e2bcd8739ae039","$parcel$interopDefault","template","container","depth0","helpers","partials","data","stack1","helper","alias1","nullContext","alias2","hooks","helperMissing","alias3","alias4","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","name","hash","fn","program","inverse","loc","start","line","column","end","compiler","main","noop","useData","default","$0b8454ed30081084$var$authent","$amyG6","getAuth","$0b8454ed30081084$var$listOfMovie","$0b8454ed30081084$var$pageOfList","$0b8454ed30081084$var$marker","$0b8454ed30081084$var$typeOfList","async","$0b8454ed30081084$var$onLibraryBtnClick","event","target","id","$ce25Z","btnWatched","classList","contains","toggle","btnQueue","$0b8454ed30081084$var$btnChangeColor","galleryLibrary","innerHTML","$7PKrS","then","$0b8454ed30081084$var$generateLibraryMarkup","usersList","startItemPosition","onePageList","slice","array","document","body","style","cursor","arr","Promise","all","map","el","ref","$0b8454ed30081084$require$axios","get","GET_ONE_MOVIE_URL","params","api_key","API_KEY","language","title","toUpperCase","release","release_date","genres","item","resolve","$0b8454ed30081084$var$makeArreyOfDataMovies","insertAdjacentHTML","length","footer","position","addEventListener","upBtn","documentElement","scrollTop","btnSignOut","$ew5fA","logOut","onAuthStateChanged","user","googleUserLibrary","textContent","$hAoKW","userEmail","window","getBoundingClientRect","bottom","clientHeight","pageYOffset","add","remove"],"version":3,"file":"library.366b3cc6.js.map"}